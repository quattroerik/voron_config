
## based on https://github.com/jontek2/A-better-print_start-macro
[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  
  UPDATE_DELAYED_GCODE ID=SWITCH_OFF_NEVERMORE_DELAYED DURATION=0            # Just in case last print was <10 min and nevermore is still on, disable delayed switch off
  SET_FAN_SPEED FAN=nevermore_fan SPEED=1             # Turn on the nevermore

  ##  Uncomment for Beacon Contact (1 of 4 for beacon contact)
  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  STATUS_HOMING                                         # Set LEDs to homing-mode
  {% if printer.toolhead.homed_axes != "xyz" %}
      G28
  {% endif %}
  
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    #M106 S255                                           # Turn on the PT-fan

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for V2.4 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  STATUS_LEVELING                                      # Set LEDs to leveling-mode
  QUAD_GANTRY_LEVEL                                    # Level the printer via QGL
  G28 Z                                                # Home Z again after QGL

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1                        # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh

  CLEAN_NOZZLE                                         #Clean Nozzle before Calibrate Z

  STATUS_CALIBRATING_Z
  CARTOGRAPHER_TOUCH                                   # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X20 Y4 Z5 F9000                      # Go start Primeline
  #M107                                                 # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  ##   Uncomment for Beacon Contact (4 of 4 for beacon contact)
  SET_GCODE_OFFSET Z=0.07                                # Add a little offset for hotend thermal expansion

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
  STATUS_PRINTING                                       # Set LEDs to printing-mode
  #G0 X20 Y4 F10000                                      # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental position
  G1 X100 E23 F1000                                     # Primeline
  G90                                                   # Absolute position


[gcode_macro PRINT_END]
gcode:
    #PARK
    G91
    G1 Z15 F8000
    G90
    G1 X150 Y280 F8000
    G92 E0
    G1 E-10 F2100
    TURN_OFF_HEATERS
    BED_MESH_CLEAR
    UPDATE_DELAYED_GCODE ID=SWITCH_OFF_NEVERMORE_DELAYED DURATION=600
    STATUS_OFF


[delayed_gcode SWITCH_OFF_NEVERMORE_DELAYED]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0
#   A list of G-Code commands to execute when the delay duration has
#   elapsed. G-Code templates are supported. This parameter must be
#   provided.
initial_duration: 600
#   The duration of the initial delay (in seconds). If set to a
#   non-zero value the delayed_gcode will execute the specified number
#   of seconds after the printer enters the "ready" state. This can be
#   useful for initialization procedures or a repeating delayed_gcode.
#   If set to 0 the delayed_gcode will not execute on startup.
#   Default is 0.


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
    {% set TARGET_TEMP = printer.heater_bed.target %}
    M140 S0
    _BED_MESH_CALIBRATE {rawparams}
    M140 S{TARGET_TEMP}

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}



[gcode_macro PRIME_PELLET]
gcode:
    # prime   
    STATUS_CLEANING
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28 # perform homing before going to the brush to avoid a miss or crash
    {% endif %}
    
    {% set EXTRUDER_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}
    
    M106 S255                      ;partcooling fan max
    #PRIME_PELLET_KICK              ;call clean macro
    G1  X20 Y5 F15000               ;move to purge position
    G1  Z0.5 F3000                 ;move to purge position
    G91                            ;incremental positioning
    #G1  Z0.2 E30 F3                ;prime hotend
    G1  Z2.0 E25 F30               ;purge and move up
    G1  Z4.0 E20 F60               ;purge and move up
    G1  Z2.0 E10 F240              ;purge and move up
    G1  Z10 F3000                  ;move up by 10
    G1  Y55 Z-18.25 F3000          ;move to wiping start
    G1  Y10 F3000                  ;wipe back
    G1  Y-10 F3000                 ;wipe forth
    G1  Y10 F3000                  ;wipe back
    G1  Y-10 F3000                 ;wipe forth
    G1  Y-55 F3000                 ;wipe end and kick off the poop pellet
    M107                           ;turn cooling fan off
    G1  Z2.0  F3000                ;move up
    G1  Y55   F7000                ;move from pellet bin quickly!
    M82                            ;extruder absolute
    G92 E0.0                       ;extruder reset
    G90                            ;absolute positioning    


[gcode_macro PRIME_PELLET_KICK]
gcode:
    # ----- CLEAN
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28 # perform homing before going to the brush to avoid a miss or crash
    {% endif %}
    
    M204 S6000                     ;set acceleration to 6000
    G1 X20 Y35 F15000               ;move to position
    G1 Z0.5 F3000                  ;move to position
    G1 Y1 F10000                   ;kick the prime tower off

[gcode_macro PARK_SWITCH_OFF]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
      #not homed -> dont move!
    {% else %}
          G0 X150 Y90 Z25 # move to center bed park position (minimum sag of gantry)
          #turn off heating
          TURN_OFF_HEATERS
          STATUS_OFF
          ##turn off motors
          M84
    {% endif %}

[gcode_macro CUSTOM_BACKLASH]
description: DO BACKLASH COMP for all positions
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28 # perform homing before going to the brush to avoid a miss or crash
      QUAD_GANTRY_LEVEL
      G28 Z
    {% endif %}
    G1 Z10

    RESPOND MSG="Front left"
    G1 X20 Y5 F10000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    RESPOND MSG="Back left"
    G1 Z5
    G1 X20 Y250 F10000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    RESPOND MSG="Back right"
    G1 Z5
    G1 X275 Y250 F10000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    RESPOND MSG="Front right"
    G1 Z5
    G1 X275 Y5 F10000
    CARTOGRAPHER_ESTIMATE_BACKLASH

    RESPOND MSG="Center"
    G1 Z5
    G1 X150 Y150 F10000
    CARTOGRAPHER_ESTIMATE_BACKLASH

[gcode_macro PURGE_LOCATION]
description: Purge location and get ready to purge
gcode:
    M109 S225
    # Move to purge zone (left side)
    G90
    G1 Z20
    #Move over Purge Bucket
    G1 X35 Y303 F6000
    G1 Z3
    
[gcode_macro CLEAN_NOZZLE]
description: Wipe the nozzle on the brush
gcode:
    STATUS_CLEANING

    {% if printer.toolhead.homed_axes != "xyz" %}
      G28 # perform homing before going to the brush to avoid a miss or crash 
    {% endif %}

    {% set brush_clean_accel = 1500 %}
    {% set brush_over_y_axis = True %}
    {% set brush_size = 35 %}
    {% set brushes = 6 %}
   
    {% set St = 300 * 60 %}
    {% set Sz = 15 * 60 %}
    {% set Sc = 100 * 60 %}

    {% set Bx = 75 %}
    {% set By = 303 %}
    {% set Bz = 1 %}


    # Set the cleaning acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}
    SET_VELOCITY_LIMIT ACCEL={brush_clean_accel}

    # Move to purge zone (left side)
    G90

    #Move over Purge Bucket
    G1 X30 Y303 F6000
    
    # Move to center of the brush
    G1 X{Bx} Y{By} F{St}
    G1 Z{Bz} F{St}
    # Wipe procedure
    G91
    {% if brush_over_y_axis %}
        {% for wipe in range(brushes) %}
            G1 Y-5 F{Sc}
            G1 Y+5 F{Sc}
        {% endfor %}
    {% endif %}

    # Move to the right side of the brush
    G1 X+{ (brush_size/2)} F{Sc}
  
    # Brush procedure
    {% for wipe in range(brushes) %}
        G1 X-{ (brush_size) } F{Sc}
        G1 X+{ (brush_size) } F{Sc}
    {% endfor %}

    G90

    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel}

    #Move away from brush
    G0 X112 Z3
    